# http://cbonte.github.io/haproxy-dconv/1.5/configuration.html

global
  ca-base                   /etc/pki/tls
  crt-base                  /etc/pki/tls/certs
  chroot                    /opt/haproxy/
  daemon
  group                     haproxy

  # If haproxy is running chroot, use a local rsyslog socket to log it.
  log                       localhost:10514 local5

  max-spread-checks         5s
  pidfile                   /var/run/haproxy # From inside chroot jail.
  ssl-default-bind-options  no-sslv3 no-tlsv10
  ssl-server-verify         required
  tune.ssl.default-dh-param 2048
  user                      haproxy

  # You can have multiple haproxy servers cover for each other. Note that
  # this port needs to be different from the statistics port. The nice
  # thing is that, again aside from the stats segment, both haproxy nodes
  # will use the same .cfg file.
  peer haproxy1 haproxy1.example.com:9002
  peer haproxy2 haproxy2.example.com:9002


defaults
  log                       global
  errorfile                 400 /usr/share/haproxy/400.http
  errorfile                 403 /usr/share/haproxy/403.http
  errorfile                 408 /usr/share/haproxy/408.http
  errorfile                 500 /usr/share/haproxy/500.http
  errorfile                 502 /usr/share/haproxy/502.http
  errorfile                 503 /usr/share/haproxy/503.http
  errorfile                 504 /usr/share/haproxy/504.http
  rate-limit                sessions 10

frontend service_front
  # http://cbonte.github.io/haproxy-dconv/1.5/configuration.html#crl-file%20%28Bind%20options%29
  bind                      *:443 ssl ca-file cert.pem crt haproxy1.combined.pem
  acl                       service_back_acl path_beg /URI/path/after/hostname
  default_backend           service_back
  description               HAProxy front end
  log                       global
  mode                      http
  stats                     show-legends
  timeout                   client 5s
  timeout                   http-request 5s
  use_backend               service_back if service_back_acl

backend service_back
  balance                   source
  description               Back end for proxy.
  log                       global
  mode                      http
  option                    httpchk /URI/path/after/hostname

  # https://raymii.org/s/snippets/haproxy_ssl_backends.html
  server                    backend1 backend1.example.com:8443 check ssl verify none ca-file cert.pem
  server                    backend2 backend2.example.com:8443 check ssl ca-file cert.pem
  timeout                   connect 4s
  timeout                   server 60s

listen stats
  bind                      *:9001 ssl ca-file cert.pem crt haproxy1.combined.pem
  mode                      http
  #stats                     auth stats:statsR3ader
  stats                     enable
  stats                     hide-version
  stats                     realm HAProxy\ Statistics
  stats                     uri /stats
  timeout                   client 5s
  timeout                   http-request 5s
